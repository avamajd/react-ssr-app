{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"G:\\\\projects\\\\nextjs-tavanito\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { login as _login, setToken as _setToken } from \"../src/actions/authActions\";\nimport Validator from \"../src/components/Validator\";\nimport \"../src/styles/pages/login.scss\";\nimport { useRouter } from 'next/router';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      \"& > *\": {\n        margin: theme.spacing(1) // width: 200\n\n      }\n    }\n  };\n});\n\nvar LoginForm = function LoginForm(props) {\n  var classes = useStyles();\n\n  var _useState = useState({\n    phoneNumber: \"\",\n    otp: \"\"\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      validationMsg = _useState2[0],\n      setValidationMsg = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      notifMsg = _useState3[0],\n      setNotifMsg = _useState3[1];\n\n  var _useState4 = useState(false),\n      showOTP = _useState4[0],\n      setShowOTP = _useState4[1]; //*************************************\n\n\n  useEffect(function () {\n    if (!Validator.isEmpty(props.auth.username)) {\n      setShowOTP(true);\n    }\n  }, [props.auth.username]); //*************************************\n\n  useEffect(function () {\n    if (!Validator.isEmpty(props.auth.error)) {\n      setValidationMsg(props.auth.error);\n    }\n\n    if (!Validator.isEmpty(props.auth.message)) {\n      setNotifMsg(props.auth.message);\n    }\n  }, [props.auth.error, props.auth.message]); //*************************************\n\n  useEffect(function () {\n    if (!Validator.isEmpty(props.auth.token)) {// props.history.push(\"/account\");\n    }\n  }, [props.auth.token]); //*************************************\n\n  var handleSendCode = function handleSendCode(otp) {\n    if (otp.length == 6) {\n      props.setToken(otp);\n    }\n  }; //*************************************\n\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n\n    if (name === \"phoneNumber\") {\n      if (Validator.isEmpty(value) || Validator.isNumber(value)) {\n        setValidationMsg(\"\");\n      } else {\n        value = value.slice(0, -1);\n        setValidationMsg(\"لطفاً تنها مقدار عددی وارد نمایید.\");\n      }\n\n      setValues(_objectSpread({}, values, _defineProperty({}, name, value)));\n    } else if (name === \"otp\") {\n      if (Validator.isNumber(value) && Validator.isShorterThan(value, 7)) {\n        setValidationMsg(\"\");\n      } else {\n        value = value.slice(0, -1);\n      }\n\n      setValues(_objectSpread({}, values, _defineProperty({}, name, value)));\n      handleSendCode(value);\n    }\n  }; //*************************************\n\n\n  var handleBlur = function handleBlur(e) {\n    var value = e.target.value;\n\n    if (!Validator.isPhoneNumber(value)) {\n      setValidationMsg(\"لطفاً یک شماره موبایل معتبر وارد نمایید.\");\n    }\n  }; //*************************************\n\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setValidationMsg(\"\");\n    props.login(values.phoneNumber);\n  }; //*************************************\n\n\n  return __jsx(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    className: \"\".concat(classes.root, \" form\") // noValidate\n    ,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit,\n    dir: \"rtl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, showOTP ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, __jsx(TextField, {\n    error: validationMsg !== \"\",\n    name: \"otp\",\n    value: values.otp,\n    onChange: handleChange // required\n    ,\n    label: \"\\u06A9\\u062F \\u062A\\u0627\\u06CC\\u06CC\\u062F\",\n    dir: \"rtl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), validationMsg ? __jsx(\"div\", {\n    className: \"validation-msg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, validationMsg)) : null) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, __jsx(TextField, {\n    error: validationMsg !== \"\",\n    name: \"phoneNumber\",\n    value: values.phoneNumber,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    required: true,\n    label: \"\\u0634\\u0645\\u0627\\u0631\\u0647 \\u062A\\u0644\\u0641\\u0646\",\n    dir: \"rtl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), validationMsg ? __jsx(\"div\", {\n    className: \"validation-msg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, validationMsg)) : null), !showOTP ? __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    type: \"submit\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"\\u0648\\u0631\\u0648\\u062F\") : null));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    login: function login(mobile) {\n      return dispatch(_login(mobile));\n    },\n    setToken: function setToken(otp) {\n      return dispatch(_setToken(otp));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["G:/projects/nextjs-tavanito/pages/index.js"],"names":["React","Fragment","useState","useEffect","makeStyles","TextField","Button","connect","login","setToken","Validator","useRouter","useStyles","theme","root","margin","spacing","LoginForm","props","classes","phoneNumber","otp","values","setValues","validationMsg","setValidationMsg","notifMsg","setNotifMsg","showOTP","setShowOTP","isEmpty","auth","username","error","message","token","handleSendCode","length","handleChange","e","target","name","value","isNumber","slice","isShorterThan","handleBlur","isPhoneNumber","handleSubmit","preventDefault","mapStateToProps","state","mapDispatchToProps","dispatch","mobile"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { login, setToken } from \"../src/actions/authActions\";\r\nimport Validator from \"../src/components/Validator\";\r\nimport \"../src/styles/pages/login.scss\";\r\nimport { useRouter } from 'next/router'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1)\r\n      // width: 200\r\n    }\r\n  }\r\n}));\r\n\r\nconst LoginForm = props => {\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({ phoneNumber: \"\", otp: \"\" });\r\n  const [validationMsg, setValidationMsg] = useState(\"\");\r\n  const [notifMsg, setNotifMsg] = useState(\"\");\r\n\r\n  const [showOTP, setShowOTP] = useState(false);\r\n\r\n  //*************************************\r\n  useEffect(() => {\r\n    if (!Validator.isEmpty(props.auth.username)) {\r\n      setShowOTP(true);\r\n    }\r\n  }, [props.auth.username]);\r\n\r\n  //*************************************\r\n  useEffect(() => {\r\n    if (!Validator.isEmpty(props.auth.error)) {\r\n      setValidationMsg(props.auth.error);\r\n    }\r\n    if (!Validator.isEmpty(props.auth.message)) {\r\n      setNotifMsg(props.auth.message);\r\n    }\r\n  }, [props.auth.error, props.auth.message]);\r\n\r\n  //*************************************\r\n  useEffect(() => {\r\n    if (!Validator.isEmpty(props.auth.token)) {\r\n      // props.history.push(\"/account\");\r\n\r\n    }\r\n  }, [props.auth.token]);\r\n\r\n  //*************************************\r\n  const handleSendCode = otp => {\r\n    if (otp.length == 6) {\r\n      props.setToken(otp);\r\n    }\r\n  };\r\n\r\n  //*************************************\r\n  const handleChange = e => {\r\n    let { name, value } = e.target;\r\n\r\n    if (name === \"phoneNumber\") {\r\n      if (Validator.isEmpty(value) || Validator.isNumber(value)) {\r\n        setValidationMsg(\"\");\r\n      } else {\r\n        value = value.slice(0, -1);\r\n        setValidationMsg(\"لطفاً تنها مقدار عددی وارد نمایید.\");\r\n      }\r\n      setValues({ ...values, [name]: value });\r\n    } else if (name === \"otp\") {\r\n      if (Validator.isNumber(value) && Validator.isShorterThan(value, 7)) {\r\n        setValidationMsg(\"\");\r\n      } else {\r\n        value = value.slice(0, -1);\r\n      }\r\n      setValues({ ...values, [name]: value });\r\n      handleSendCode(value);\r\n    }\r\n  };\r\n\r\n  //*************************************\r\n  const handleBlur = e => {\r\n    let { value } = e.target;\r\n    if (!Validator.isPhoneNumber(value)) {\r\n      setValidationMsg(\"لطفاً یک شماره موبایل معتبر وارد نمایید.\");\r\n    }\r\n  };\r\n\r\n  //*************************************\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    setValidationMsg(\"\");\r\n    props.login(values.phoneNumber);\r\n  };\r\n\r\n  //*************************************\r\n\r\n  return (\r\n    <Fragment>\r\n      <form\r\n        className={`${classes.root} form`}\r\n        // noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={handleSubmit}\r\n        dir=\"rtl\"\r\n      >\r\n        {showOTP ? (\r\n          <div>\r\n            <TextField\r\n              error={validationMsg !== \"\"}\r\n              name=\"otp\"\r\n              value={values.otp}\r\n              onChange={handleChange}\r\n              // required\r\n              label=\"کد تایید\"\r\n              dir=\"rtl\"\r\n            />\r\n\r\n            {validationMsg ? (\r\n              <div className=\"validation-msg\">\r\n                <span>{validationMsg}</span>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        ) : (\r\n            <div>\r\n              <TextField\r\n                error={validationMsg !== \"\"}\r\n                name=\"phoneNumber\"\r\n                value={values.phoneNumber}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                required\r\n                label=\"شماره تلفن\"\r\n                dir=\"rtl\"\r\n              />\r\n              {validationMsg ? (\r\n                <div className=\"validation-msg\">\r\n                  <span>{validationMsg}</span>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          )}\r\n        {!showOTP ? (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            type=\"submit\"\r\n            value=\"Submit\"\r\n          >\r\n            ورود\r\n          </Button>\r\n        ) : null}\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    login: (mobile) => dispatch(login(mobile)),\r\n    setToken: (otp) => dispatch(setToken(otp))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n"]},"metadata":{},"sourceType":"module"}