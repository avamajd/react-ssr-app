{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"G:\\\\projects\\\\nextjs-tavanito\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { login, setToken } from \"../src/actions/authActions\";\nimport Validator from \"../src/components/Validator\";\nimport \"../src/styles/pages/login.scss\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1) // width: 200\n\n    }\n  }\n}));\n\nconst LoginForm = props => {\n  const classes = useStyles();\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    phoneNumber: \"\",\n    otp: \"\"\n  });\n  const {\n    0: validationMsg,\n    1: setValidationMsg\n  } = useState(\"\");\n  const {\n    0: notifMsg,\n    1: setNotifMsg\n  } = useState(\"\");\n  const {\n    0: showOTP,\n    1: setShowOTP\n  } = useState(false); //*************************************\n\n  useEffect(() => {\n    if (!Validator.isEmpty(props.auth.username)) {\n      setShowOTP(true);\n    }\n  }, [props.auth.username]); //*************************************\n\n  useEffect(() => {\n    if (!Validator.isEmpty(props.auth.error)) {\n      setValidationMsg(props.auth.error);\n    }\n\n    if (!Validator.isEmpty(props.auth.message)) {\n      setNotifMsg(props.auth.message);\n    }\n  }, [props.auth.error, props.auth.message]); //*************************************\n\n  useEffect(() => {\n    if (!Validator.isEmpty(props.auth.token)) {\n      props.history.push(\"/account\");\n    }\n  }, [props.auth.token]); //*************************************\n\n  const handleSendCode = otp => {\n    if (otp.length == 6) {\n      props.setToken(otp);\n    }\n  }; //*************************************\n\n\n  const handleChange = e => {\n    let {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"phoneNumber\") {\n      if (Validator.isEmpty(value) || Validator.isNumber(value)) {\n        setValidationMsg(\"\");\n      } else {\n        value = value.slice(0, -1);\n        setValidationMsg(\"لطفاً تنها مقدار عددی وارد نمایید.\");\n      }\n\n      setValues(_objectSpread({}, values, {\n        [name]: value\n      }));\n    } else if (name === \"otp\") {\n      if (Validator.isNumber(value) && Validator.isShorterThan(value, 7)) {\n        setValidationMsg(\"\");\n      } else {\n        value = value.slice(0, -1);\n      }\n\n      setValues(_objectSpread({}, values, {\n        [name]: value\n      }));\n      handleSendCode(value);\n    }\n  }; //*************************************\n\n\n  const handleBlur = e => {\n    let {\n      value\n    } = e.target;\n\n    if (!Validator.isPhoneNumber(value)) {\n      setValidationMsg(\"لطفاً یک شماره موبایل معتبر وارد نمایید.\");\n    }\n  }; //*************************************\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setValidationMsg(\"\");\n    props.login(values.phoneNumber);\n  }; //*************************************\n\n\n  return __jsx(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    className: `${classes.root} form` // noValidate\n    ,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit,\n    dir: \"rtl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, showOTP ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(TextField, {\n    error: validationMsg !== \"\",\n    name: \"otp\",\n    value: values.otp,\n    onChange: handleChange // required\n    ,\n    label: \"\\u06A9\\u062F \\u062A\\u0627\\u06CC\\u06CC\\u062F\",\n    dir: \"rtl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), validationMsg ? __jsx(\"div\", {\n    className: \"validation-msg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, validationMsg)) : null) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, __jsx(TextField, {\n    error: validationMsg !== \"\",\n    name: \"phoneNumber\",\n    value: values.phoneNumber,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    required: true,\n    label: \"\\u0634\\u0645\\u0627\\u0631\\u0647 \\u062A\\u0644\\u0641\\u0646\",\n    dir: \"rtl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), validationMsg ? __jsx(\"div\", {\n    className: \"validation-msg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, validationMsg)) : null), !showOTP ? __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    type: \"submit\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"\\u0648\\u0631\\u0648\\u062F\") : null));\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n}); // const mapDispatchToProps = (dispatch) => {\n//   return {\n//     login: (mobile) => dispatch(login(mobile)),\n//     setToken: (otp) => dispatch(setToken(otp))\n//   };\n// };\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddTodo: todo => {\n      dispatch(addTodo(toto));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["G:/projects/nextjs-tavanito/pages/index.js"],"names":["React","Fragment","useState","useEffect","makeStyles","TextField","Button","connect","login","setToken","Validator","useStyles","theme","root","margin","spacing","LoginForm","props","classes","values","setValues","phoneNumber","otp","validationMsg","setValidationMsg","notifMsg","setNotifMsg","showOTP","setShowOTP","isEmpty","auth","username","error","message","token","history","push","handleSendCode","length","handleChange","e","name","value","target","isNumber","slice","isShorterThan","handleBlur","isPhoneNumber","handleSubmit","preventDefault","mapStateToProps","state","mapDispatchToProps","dispatch","onAddTodo","todo","addTodo","toto"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { login, setToken } from \"../src/actions/authActions\";\r\nimport Validator from \"../src/components/Validator\";\r\nimport \"../src/styles/pages/login.scss\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1)\r\n      // width: 200\r\n    }\r\n  }\r\n}));\r\n\r\nconst LoginForm = props => {\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({ phoneNumber: \"\", otp: \"\" });\r\n  const [validationMsg, setValidationMsg] = useState(\"\");\r\n  const [notifMsg, setNotifMsg] = useState(\"\");\r\n\r\n  const [showOTP, setShowOTP] = useState(false);\r\n\r\n  //*************************************\r\n  useEffect(() => {\r\n    if (!Validator.isEmpty(props.auth.username)) {\r\n      setShowOTP(true);\r\n    }\r\n  }, [props.auth.username]);\r\n\r\n  //*************************************\r\n  useEffect(() => {\r\n    if (!Validator.isEmpty(props.auth.error)) {\r\n      setValidationMsg(props.auth.error);\r\n    }\r\n    if (!Validator.isEmpty(props.auth.message)) {\r\n      setNotifMsg(props.auth.message);\r\n    }\r\n  }, [props.auth.error, props.auth.message]);\r\n\r\n  //*************************************\r\n  useEffect(() => {\r\n    if (!Validator.isEmpty(props.auth.token)) {\r\n      props.history.push(\"/account\");\r\n    }\r\n  }, [props.auth.token]);\r\n\r\n  //*************************************\r\n  const handleSendCode = otp => {\r\n    if (otp.length == 6) {\r\n      props.setToken(otp);\r\n    }\r\n  };\r\n\r\n  //*************************************\r\n  const handleChange = e => {\r\n    let { name, value } = e.target;\r\n\r\n    if (name === \"phoneNumber\") {\r\n      if (Validator.isEmpty(value) || Validator.isNumber(value)) {\r\n        setValidationMsg(\"\");\r\n      } else {\r\n        value = value.slice(0, -1);\r\n        setValidationMsg(\"لطفاً تنها مقدار عددی وارد نمایید.\");\r\n      }\r\n      setValues({ ...values, [name]: value });\r\n    } else if (name === \"otp\") {\r\n      if (Validator.isNumber(value) && Validator.isShorterThan(value, 7)) {\r\n        setValidationMsg(\"\");\r\n      } else {\r\n        value = value.slice(0, -1);\r\n      }\r\n      setValues({ ...values, [name]: value });\r\n      handleSendCode(value);\r\n    }\r\n  };\r\n\r\n  //*************************************\r\n  const handleBlur = e => {\r\n    let { value } = e.target;\r\n    if (!Validator.isPhoneNumber(value)) {\r\n      setValidationMsg(\"لطفاً یک شماره موبایل معتبر وارد نمایید.\");\r\n    }\r\n  };\r\n\r\n  //*************************************\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    setValidationMsg(\"\");\r\n    props.login(values.phoneNumber);\r\n  };\r\n\r\n  //*************************************\r\n\r\n  return (\r\n    <Fragment>\r\n      <form\r\n        className={`${classes.root} form`}\r\n        // noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={handleSubmit}\r\n        dir=\"rtl\"\r\n      >\r\n        {showOTP ? (\r\n          <div>\r\n            <TextField\r\n              error={validationMsg !== \"\"}\r\n              name=\"otp\"\r\n              value={values.otp}\r\n              onChange={handleChange}\r\n              // required\r\n              label=\"کد تایید\"\r\n              dir=\"rtl\"\r\n            />\r\n\r\n            {validationMsg ? (\r\n              <div className=\"validation-msg\">\r\n                <span>{validationMsg}</span>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        ) : (\r\n            <div>\r\n              <TextField\r\n                error={validationMsg !== \"\"}\r\n                name=\"phoneNumber\"\r\n                value={values.phoneNumber}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                required\r\n                label=\"شماره تلفن\"\r\n                dir=\"rtl\"\r\n              />\r\n              {validationMsg ? (\r\n                <div className=\"validation-msg\">\r\n                  <span>{validationMsg}</span>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          )}\r\n        {!showOTP ? (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            type=\"submit\"\r\n            value=\"Submit\"\r\n          >\r\n            ورود\r\n          </Button>\r\n        ) : null}\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     login: (mobile) => dispatch(login(mobile)),\r\n//     setToken: (otp) => dispatch(setToken(otp))\r\n//   };\r\n// };\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddTodo: todo => { dispatch(addTodo(toto)) }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n"]},"metadata":{},"sourceType":"module"}