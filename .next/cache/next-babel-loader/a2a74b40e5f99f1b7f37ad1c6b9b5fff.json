{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { LOGIN, LOGIN_COMPLETE, LOGIN_ERROR, SET_USERNAME, SET_USERNAME_ERROR, SET_TOKEN, SET_TOKEN_COMPLETE, SET_TOKEN_ERROR, LOGOUT } from \"../constants\"; // import { REHYDRATE } from \"redux-persist/es/constants\";\n// import { persist } from \"../store/persist\";\n\nconst initialState = {\n  isFetching: false,\n  isAuthenticated: false,\n  // username -> phone#\n  username: \"\",\n  token: \"\",\n  error: \"\",\n  message: \"\"\n}; // export const authReducer = function(state = initialState, action) {\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOGIN:\n      console.log(\"called\");\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: \"\"\n      });\n\n    case LOGIN_COMPLETE:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        isAuthenticated: true\n      });\n\n    case LOGIN_ERROR:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        isAuthenticated: false // error: action.error\n\n      });\n\n    case SET_USERNAME:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        username: action.username,\n        message: action.message\n      });\n\n    case SET_USERNAME_ERROR:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: action.error\n      });\n\n    case SET_TOKEN:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: \"\"\n      });\n\n    case SET_TOKEN_COMPLETE:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        token: action.token\n      });\n\n    case SET_TOKEN_ERROR:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: action.error\n      });\n\n    case LOGOUT:\n      return _objectSpread({}, initialState);\n    // case REHYDRATE:\n    //   return state.token  && state.username ? { ...state } : {};\n\n    default:\n      return state;\n  }\n}\n; // export default persist(\"authReducer\", [\"token\"], authReducer);","map":{"version":3,"sources":["G:/projects/nextjs-tavanito/src/reducers/authReducer.js"],"names":["LOGIN","LOGIN_COMPLETE","LOGIN_ERROR","SET_USERNAME","SET_USERNAME_ERROR","SET_TOKEN","SET_TOKEN_COMPLETE","SET_TOKEN_ERROR","LOGOUT","initialState","isFetching","isAuthenticated","username","token","error","message","state","action","type","console","log"],"mappings":";;;;;;;;;;;;AAAA,SACEA,KADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,kBALF,EAMEC,SANF,EAOEC,kBAPF,EAQEC,eARF,EASEC,MATF,QAUO,cAVP,C,CAWA;AAEA;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,eAAe,EAAE,KAFE;AAGnB;AACAC,EAAAA,QAAQ,EAAE,EAJS;AAKnBC,EAAAA,KAAK,EAAE,EALY;AAMnBC,EAAAA,KAAK,EAAE,EANY;AAOnBC,EAAAA,OAAO,EAAE;AAPU,CAArB,C,CAUA;;AACA,eAAe,UAAUC,KAAK,GAAGP,YAAlB,EAAgCQ,MAAhC,EAAwC;AAErD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKlB,KAAL;AACEmB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEA,+BACKJ,KADL;AAEEN,QAAAA,UAAU,EAAE,IAFd;AAGEI,QAAAA,KAAK,EAAE;AAHT;;AAKF,SAAKb,cAAL;AACE,+BACKe,KADL;AAEEN,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,eAAe,EAAE;AAHnB;;AAKF,SAAKT,WAAL;AACE,+BACKc,KADL;AAEEN,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,eAAe,EAAE,KAHnB,CAIE;;AAJF;;AAOF,SAAKR,YAAL;AACE,+BACKa,KADL;AAEEN,QAAAA,UAAU,EAAE,KAFd;AAGEE,QAAAA,QAAQ,EAAEK,MAAM,CAACL,QAHnB;AAIEG,QAAAA,OAAO,EAAEE,MAAM,CAACF;AAJlB;;AAMF,SAAKX,kBAAL;AACE,+BACKY,KADL;AAEEN,QAAAA,UAAU,EAAE,KAFd;AAGEI,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAHhB;;AAMF,SAAKT,SAAL;AACE,+BACKW,KADL;AAEEN,QAAAA,UAAU,EAAE,IAFd;AAGEI,QAAAA,KAAK,EAAE;AAHT;;AAKF,SAAKR,kBAAL;AACE,+BACKU,KADL;AAEEN,QAAAA,UAAU,EAAE,KAFd;AAGEG,QAAAA,KAAK,EAAEI,MAAM,CAACJ;AAHhB;;AAKF,SAAKN,eAAL;AACE,+BACKS,KADL;AAEEN,QAAAA,UAAU,EAAE,KAFd;AAGEI,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAHhB;;AAMF,SAAKN,MAAL;AACE,+BACKC,YADL;AAIF;AACA;;AAEA;AACE,aAAOO,KAAP;AAjEJ;AAmED;AAAA,C,CAED","sourcesContent":["import {\r\n  LOGIN,\r\n  LOGIN_COMPLETE,\r\n  LOGIN_ERROR,\r\n  SET_USERNAME,\r\n  SET_USERNAME_ERROR,\r\n  SET_TOKEN,\r\n  SET_TOKEN_COMPLETE,\r\n  SET_TOKEN_ERROR,\r\n  LOGOUT\r\n} from \"../constants\";\r\n// import { REHYDRATE } from \"redux-persist/es/constants\";\r\n\r\n// import { persist } from \"../store/persist\";\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  isAuthenticated: false,\r\n  // username -> phone#\r\n  username: \"\",\r\n  token: \"\",\r\n  error: \"\",\r\n  message: \"\"\r\n};\r\n\r\n// export const authReducer = function(state = initialState, action) {\r\nexport default function (state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      console.log(\"called\")\r\n\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        error: \"\"\r\n      };\r\n    case LOGIN_COMPLETE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isAuthenticated: true\r\n      };\r\n    case LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isAuthenticated: false\r\n        // error: action.error\r\n      };\r\n\r\n    case SET_USERNAME:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        username: action.username,\r\n        message: action.message\r\n      };\r\n    case SET_USERNAME_ERROR:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        error: action.error\r\n      };\r\n\r\n    case SET_TOKEN:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        error: \"\"\r\n      };\r\n    case SET_TOKEN_COMPLETE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        token: action.token\r\n      };\r\n    case SET_TOKEN_ERROR:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        error: action.error\r\n      };\r\n\r\n    case LOGOUT:\r\n      return {\r\n        ...initialState\r\n      };\r\n\r\n    // case REHYDRATE:\r\n    //   return state.token  && state.username ? { ...state } : {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// export default persist(\"authReducer\", [\"token\"], authReducer);\r\n"]},"metadata":{},"sourceType":"module"}